- ðŸ”’ [CORE-SPEC-03] GyroSI: **Architecture Mapping (this shows our general architectural and naming styling)**
    - **G1(GS_CS): GyroAlignment through GyroTensor Management (Genetic Memory) â†’ gyro_genetic_memory()**
        - G1_CS â†’Â **GyroTensor Management**Â through **gyro_genetic_memory(gyrotensor_id) -** This is the integer label of each tensor, e.g., "id_0", "id_1".
        - G1_UNA â†’Â **GyroTensor Management**Â through **gyro_genetic_memory(gyrotensor_com) -** a single 2Ã—3 array
        - G1_ONA â†’Â **GyroTensor Management**Â through **gyro_genetic_memory(gyrotensor_nest) -** two nested 2Ã—3 arrays
        - G1_BU_In â†’Â **GyroTensor Management**Â through **gyro_genetic_memory(gyrotensor_add)** - G4 Serializer â†’ The **Gene** (mechanically representing Lgyr-focused coaddition, with both gyrations identity) is a global invariant consisting of two tensors, `id_0` and `id_1`:
        - G1_BU_Eg â†’Â **GyroTensor Management**Â through Â **gyro_genetic_memory(gyrotensor_quant)** - G5 Deserializer â†’ The **Genome** (mechanically representing Rgyr-focused coaddition) is a **log of the navigation path**, recording gyration operations applied to each gene tensor (`id_0` and `id_1`) over time. Each gene consists of two tensors, so each genome step encodes **two navigation events**, one per tensor.
    - **G2(GS_UNA): GyroInformation through GyroTensor Curation (Epigenetic Memory) â†’ gyro_epigenetic_memory()**
        - G2_CS â†’Â **GyroTensor Curation**Â throughÂ All Data Schemas (Application Structure, Files): **g2_cs()**
        - G2_UNA â†’Â **GyroTensor Curation**Â throughÂ Backend Pipeline (Data Preprocessing, Indexing): **g2_una()**
        - G2_ONA â†’Â **GyroTensor Curation**Â throughÂ Frontend Data (Data Interaction, Settings): **g2_ona()**
        - G2_BU_In â†’Â **GyroTensor Curation**Â throughÂ Ingress Data & Directives: **g2_bu_in()**
        - G2_BU_Eg â†’Â **GyroTensor Curation**Â throughÂ Egress Data & Events: **g2_bu_eg()**
    - **G3(GS_ONA): GyroInference through GyroTensor Interaction (Structural Memory) â†’ gyro_structural_memory()**
        - G3_CS â†’Â **GyroTensor Interaction**Â through Hardware Endpoints: **g3_cs()**
        - G3_UNA â†’Â **GyroTensor Interaction**Â through Data Endpoints: **g3_una()**
        - G3_ONA â†’Â **GyroTensor Interaction**Â through the Frontend Interface: **g3_ona()**
        - G3_BU_In â†’Â **GyroTensor Interaction**Â through User/System Input: **g3_bu_in()**
        - G3_BU_Eg â†’Â **GyroTensor Interaction**Â through System Output: **g3_bu_eg()**
    - **G4(GS_BU_In): GyroIntelligence through GyroTensor Ingress Cooperation (Somatic Memory) â†’ gyro_somatic_memory()**
        - G4_CS â†’Â **GyroTensor** **Cooperation** through Governance Traceability: g4_cs()
        - G4_UNA â†’Â **GyroTensor** **Cooperation** throughÂ Information Variety: g4_una()
        - G4_ONA â†’Â **GyroTensor** **Cooperation** throughÂ Inference Accountability: g4_ona()
        - G4_BU_In â†’Â **GyroTensor** **Cooperation** through Intelligence Integrity Ingress: g4_bu_in()
        - G4_BU_Eg â†’Â **GyroTensor** **Cooperation** through Intelligence Integrity Egress: g4_bu_eg()
    - **G5(GS_BU_Eg): GyroIntelligence through GyroTensor Egress Operation (Immunity Memory) â†’ gyro_immunity_memory()**
        - G5_CS â†’Â **GyroTensor Egress Operation Management** through G1(GS_CS): GyroAlignment (Genetic Memory) - **gyro_management(GyroTensor_quant)**
        - G5_UNA â†’Â **GyroTensor Egress Operation Curation** through G2(GS_UNA): GyroInformation (Epigenetic Memory)
        - G5_ONA â†’Â **GyroTensor Egress Operation Interaction** through G3(GS_ONA): GyroInference (Structural Memory) - **gyro_curation(gyrotensor_quant)**
        - G5_BU_In â†’Â **GyroTensor Egress Operation Cooperation** through G4(GS_BU_In): GyroIntelligence Ingress (Somatic Memory) - **gyro_interaction(gyrotensor_quant)**
        - G5_BU_Eg â†’Â **GyroTensor Egress Operation Operation** through G5(GS_BU_Eg): GyroIntelligence Egress (Immunity Memory) â†’ **gyro_operation()**
            - **gyro_management(GyroTensor_quant)**
                - **gyro_genetic_memory(gyrotensor_id)**
                - **gyro_genetic_memory(gyrotensor_com)**
                - **gyro_genetic_memory(gyrotensor_nest)**
                - **gyro_genetic_memory(gyrotensor_add)**
                - **gyro_genetic_memory(gyrotensor_quant)**
            - Stable (Internal Genome): Left Inverse Operator (global sign flip; multiply entire tensor by -1) â†’ **gyro_curation(gyrotensor_quant)**
            - Unstable (Intermediate Genome): Forward Gyration Operator (flip rows 0 and 2; tensor[0] and tensor[2] *= -1) â†’ **gyro_interaction(gyrotensor_quant)**
            - Neutral (External Genome): Backward Gyration Operator (flip rows 1 and 3; tensor[1] and tensor[3] *= -1) â†’ **gyro_cooperation(gyrotensor_quant)**